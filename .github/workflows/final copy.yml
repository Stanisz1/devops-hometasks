name: final-11
on:
  push:
    branches:
      - master
    tags-ignore:
      - '*'
  workflow_dispatch:
  
jobs:
  build-docker:
    runs-on: ubuntu-20.04
    
    permissions:
      contents: write
    steps:
    # - uses: actions/checkout@v3
    #   with:
    #     #ref: ${{ steps.tag_create.outputs.tag_exists }}
    #     fetch-depth: '0'

    # - name: Bump version and push tag
    #   uses: anothrNick/github-tag-action@1.64.0
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}
    #     WITH_V: true
    #     #PRERELEASE: true
    - uses: actions/checkout@v3
    - uses: rickstaa/action-create-tag@v1
      id: "tag_create"
      with:
        tag: "*"
        tag_exists_error: false
        message: "Latest release"

    # # Print result using the env variable.
    # -  run: |
    #     echo "Tag already present: ${{ env.TAG_EXISTS }}"

    # Print result using the action output.
    - run: |
        echo "Tag already present: ${{ steps.tag_create.outputs.tag_exists }}"
    
    - uses: actions/checkout@v3.3.0
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.ACTION_TOKEN }}
    - name: build WCG
      run: |
        repository_owner=${{ github.repository_owner }}
        repository_owner_lowercase=$(echo "$repository_owner" | tr '[:upper:]' '[:lower:]')
        docker build -t ghcr.io/${repository_owner_lowercase}/wcg:${{ github.tag }} -t ghcr.io/${repository_owner_lowercase}/wcg:latest -f ./07-docker/Dockerfile.multi .
        docker push ghcr.io/${repository_owner_lowercase}/wcg:${{ github.tag }}
        docker push ghcr.io/${repository_owner_lowercase}/wcg:latest
        

  lint-test:
    needs: [build-docker]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.2

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.4.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}

  chart-releaser:
    needs: [build-docker, lint-test]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"  
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.2
      # Optional step if GPG signing is used
      # - name: Prepare GPG key
      #   run: |
      #     gpg_dir=.cr-gpg
      #     mkdir "$gpg_dir"
      #     keyring="$gpg_dir/secring.gpg"
      #     base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring"
      #     passphrase_file="$gpg_dir/passphrase"
      #     echo "$GPG_PASSPHRASE" > "$passphrase_file"
      #     echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV"
      #     echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV"
      #   env:
      #     GPG_KEYRING_BASE64: "${{ secrets.GPG_KEYRING_BASE64 }}"
      #     GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"

      - name: Add dependency chart repos
        run: |
          helm package 12-helm/wcg --app-version ${{ steps.tag_create.outputs.tag_exists }} --version ${{ steps.tag_create.outputs.tag_exists }} -d  final
          helm repo index --url  https://stanisz1.github.io/devops-hometasks/ .
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: final
          config: index.yaml
          charts_repo_url: xxxxxx
        env:
          CR_TOKEN: "${{ secrets.ACTION_TOKEN }}"