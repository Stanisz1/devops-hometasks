name: final-1
on:
  push:
    branches:
      - master
    tags:
      - '*'
  workflow_dispatch:

env:
  OWNER: ${{ github.repository_owner }}

jobs:
  build-docker:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3.3.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACTION_TOKEN }}
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
      - name: build WCG
        run: |
          repository_owner=${{ github.repository_owner }}
          repository_owner_lowercase=$(echo "$repository_owner" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/${repository_owner_lowercase}/wcg:${{ github.sha }} -t ghcr.io/${repository_owner_lowercase}/wcg:latest -f ./07-docker/Dockerfile.multi .
          docker push ghcr.io/${repository_owner_lowercase}/wcg:${{ github.sha }}
          docker push ghcr.io/${repository_owner_lowercase}/wcg:latest

  Lint-and-Test-Charts:
        runs-on: ubuntu-20.04
        steps:
          - name: Checkout
            uses: actions/checkout@v2
            with:
              fetch-depth: 0
  
          - name: Set up Python
            uses: actions/setup-python@v2
            with:
              python-version: 3.7
    
          - name: Set up chart-testing
            uses: helm/chart-testing-action@v2.2.1
           
          - name: Run chart-testing (list-changed)
            id: list-changed
            run: |
              changed=$(ct list-changed --config index.yaml)
              if [[ -n "$changed" ]]; then
                echo "::set-output name=changed::true"
              fi
    
          - name: Run chart-testing (lint)
            run: ct lint --config index.yaml
    
          - name: Create kind cluster
            uses: helm/kind-action@v1.2.0
            if: steps.list-changed.outputs.changed == 'true'
    
          - name: Run chart-testing (install)
            run: ct install --config index.yaml


  Release-Charts:

      runs-on: ubuntu-20.04

      permissions:
        contents: write
  
      steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
  
        - name: Configure Git
          run: |
            git config user.name "$GITHUB_ACTOR"
          
  
        - name: Install Helm
          uses: azure/setup-helm@v1
          with:
            version: v3.8.1
  
        # Optional step if GPG signing is used
        - name: Prepare GPG key
          run: |
            gpg_dir=.cr-gpg
            mkdir "$gpg_dir"
  
            keyring="$gpg_dir/secring.gpg"
            base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring"
  
            passphrase_file="$gpg_dir/passphrase"
            echo "$GPG_PASSPHRASE" > "$passphrase_file"
  
            echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV"
            echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV"
          env:
            GPG_KEYRING_BASE64: "${{ secrets.GPG_KEYRING_BASE64 }}"
            GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"
  
        - name: Add dependency chart repos
          run: |
            helm repo add  https://stanisz1.github.io/devops-hometasks/
  
        - name: Run chart-releaser
          uses: helm/chart-releaser-action@v1.4.0
          with:
            charts_dir: charts
            config: index.yaml
          env:
            CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"